x-superset-image: &superset-image ${SUPERSET_IMAGE}
x-superset-volumes: &superset-volumes
  - superset_home:/app/superset_home
x-superset-network: &superset-network
  - proxy
  - superset

x-superset-environment: &superset-environment
  TZ: Asia/Bangkok

  DATABASE_DB: ${DB_NAME:-superset}
  DATABASE_HOST: superset_db
  DATABASE_USER: ${DB_USERNAME:-superset}
  DATABASE_PASSWORD: ${DB_PASSWORD:-superset}
  DATABASE_PORT: 5432
  DATABASE_DIALECT: postgresql

  POSTGRES_DB: ${DB_NAME:-superset}
  POSTGRES_USER: ${DB_USERNAME:-superset}
  POSTGRES_USERANE: ${DB_USERNAME:-superset}
  POSTGRES_PASSWORD: ${DB_PASSWORD:-superset}
  PYTHONPATH: /app/pythonpath
  REDIS_HOST: superset_redis
  REDIS_PORT: 6379
  #  superset environment
  SUPERSET_ENV: production
  SUPERSET_LOAD_EXAMPLES: "false"
  # $ openssl rand -base64 32
  SUPERSET_SECRET_KEY: ${SECRET_KEY:-reqired}
  SUPERSET_PORT: 8088
  MAPBOX_API_KEY: ""

  BASE_URL: ${BASE_URL}
  KEYCLOAK_ISSUER: ${KEYCLOAK_ISSUER}
  KEYCLOAK_LOGOUT_REDIRECT_URL: ${LOGOUT_REDIRECT_URL}
  KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
  KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}

version: "3.8"
services:
  superset:
    image: *superset-image
    hostname: superset_app
    environment: *superset-environment

    networks: *superset-network
    volumes: *superset-volumes
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.superset.tls=true
        - traefik.http.routers.superset.entryPoints=web,websecure
        - traefik.http.routers.superset.rule=Host(`${DOMAIN}`) && PathPrefix(`${PREFIX}`)
        - traefik.http.services.superset.loadbalancer.server.port=8088
    # ports:
    #   - 8088:8088

  redis:
    image: redis:7
    hostname: superset_redis
    environment: *superset-environment
    networks: *superset-network
    volumes:
      - redis:/data

  postgresql:
    image: bitnami/postgresql:15
    hostname: superset_db
    environment: *superset-environment
    networks: *superset-network
    volumes:
      - db_home:/bitnami/postgresql
      # - ./superset/docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  superset-worker:
    image: *superset-image
    environment: *superset-environment
    networks: *superset-network
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    volumes: *superset-volumes
    healthcheck:
      test: ["CMD-SHELL", "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME"]

  superset-worker-beat:
    image: *superset-image
    environment: *superset-environment
    networks: *superset-network
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    volumes: *superset-volumes
    healthcheck:
      disable: true

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
networks:
  proxy:
    external: true
  superset:
    external: false
